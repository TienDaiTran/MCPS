package com.dd.mcps.entities;

// Generated Jun 18, 2015 6:31:16 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * McpsRevieweraccountSurvey generated by hbm2java
 */
@Entity
@Table(name = "mcps_revieweraccount_survey", catalog = "mcps")
public class McpsRevieweraccountSurvey implements java.io.Serializable {

	private long id;
	private McpsRevieweraccount mcpsRevieweraccount;
	private McpsSurvey mcpsSurvey;
	private Set<McpsAnswer> mcpsAnswers = new HashSet<McpsAnswer>(0);

	public McpsRevieweraccountSurvey() {
	}

	public McpsRevieweraccountSurvey(long id,
			McpsRevieweraccount mcpsRevieweraccount, McpsSurvey mcpsSurvey) {
		this.id = id;
		this.mcpsRevieweraccount = mcpsRevieweraccount;
		this.mcpsSurvey = mcpsSurvey;
	}

	public McpsRevieweraccountSurvey(long id,
			McpsRevieweraccount mcpsRevieweraccount, McpsSurvey mcpsSurvey,
			Set<McpsAnswer> mcpsAnswers) {
		this.id = id;
		this.mcpsRevieweraccount = mcpsRevieweraccount;
		this.mcpsSurvey = mcpsSurvey;
		this.mcpsAnswers = mcpsAnswers;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ReviewerAccountID", nullable = false)
	public McpsRevieweraccount getMcpsRevieweraccount() {
		return this.mcpsRevieweraccount;
	}

	public void setMcpsRevieweraccount(McpsRevieweraccount mcpsRevieweraccount) {
		this.mcpsRevieweraccount = mcpsRevieweraccount;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SurveyID", nullable = false)
	public McpsSurvey getMcpsSurvey() {
		return this.mcpsSurvey;
	}

	public void setMcpsSurvey(McpsSurvey mcpsSurvey) {
		this.mcpsSurvey = mcpsSurvey;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcpsRevieweraccountSurvey")
	public Set<McpsAnswer> getMcpsAnswers() {
		return this.mcpsAnswers;
	}

	public void setMcpsAnswers(Set<McpsAnswer> mcpsAnswers) {
		this.mcpsAnswers = mcpsAnswers;
	}

}
